;   Procedural interface to the non-volatile memory.
;
;   The following routines are exported, which is the rest of the system's
;   sole access to the EERPOM:
;
;     PROM_LOCK  -  Acquire exclusive access to PROM_xxx routines.
;
;     PROM_ADR  -  Set address of the next EEPROM read or write from REG2:REG1.
;
;     PROM_READ  -  Read byte from current EEPROM address into REG0,
;       then increment the current address.
;
;     PROM_WRITE  -  Write REG0 to current EEPROM address, then
;       increment the current address.
;
;     PROM_FLUSH  -  Guarantees all write data is physically written
;       to the EEPROM.  Write data may be buffered until this call.
;
;     PROM_UNLOCK  -  Release exclusive access to PROM_xxx routines.
;
;   The following resources must be defined externally to this module.
;
;     FLAG_PROMLOCK  -  Used to implement PROM_LOCK/PROM_UNLOCK mutex.  Set
;       when a task has the PROM routines locked.  Read-only outside this
;       module.
;
/include "usbser.ins.aspic"

;*******************************************************************************
;
;   Configuration constants.
;
lbank    equ     0           ;register bank for the local state of this module

/include "(cog)src/pic/prom18.ins.aspic" ;PIC 18 internal EEPROM, multi-tasking

         end
